# -*- coding: utf-8 -*-
# Generated by Django 1.10.3 on 2016-11-15 06:49
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('organizations', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Device',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('device_type', models.CharField(choices=[('laptop', 'Laptop'), ('printer', 'Printer'), ('phone', 'Phone'), ('monitor', 'Monitor'), ('projector', 'Projector'), ('tablet', 'Tablet'), ('headset', 'Headset'), ('hard_drive', 'Hard Drive')], max_length=16)),
                ('manufacturer', models.CharField(max_length=32)),
                ('model', models.CharField(max_length=64)),
                ('serial', models.CharField(max_length=128)),
                ('date_purchased', models.DateField()),
                ('purchase_price', models.FloatField(blank=True, null=True)),
                ('receipt', models.FileField(blank=True, null=True, upload_to=b'')),
                ('notes', models.TextField(blank=True, null=True)),
                ('current_owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='organizations.Person')),
            ],
        ),
        migrations.CreateModel(
            name='EventBase',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_type', models.CharField(max_length=40)),
                ('date', models.DateField()),
                ('notes', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Warranty',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=255)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('link', models.URLField(blank=True, help_text='A link to more information.', null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('documentation', models.FileField(blank=True, null=True, upload_to=b'')),
                ('device', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='devices.Device')),
            ],
            options={
                'verbose_name_plural': 'Warranties',
            },
        ),
        migrations.CreateModel(
            name='DecommissionEvent',
            fields=[
                ('eventbase_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='devices.EventBase')),
                ('method', models.CharField(choices=[('recycled', 'Recycled'), ('sold', 'Sold'), ('disposal service', 'Disposal Service')], max_length=16)),
                ('receipt', models.FileField(blank=True, null=True, upload_to=b'')),
                ('cost', models.FloatField(help_text='\n        Use positive values when selling, negative if paying a service.\n        ')),
            ],
            bases=('devices.eventbase',),
        ),
        migrations.CreateModel(
            name='LossEvent',
            fields=[
                ('eventbase_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='devices.EventBase')),
                ('documentation', models.FileField(blank=True, null=True, upload_to=b'')),
                ('recovery_date', models.DateField(blank=True, null=True)),
            ],
            bases=('devices.eventbase',),
        ),
        migrations.CreateModel(
            name='NoteEvent',
            fields=[
                ('eventbase_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='devices.EventBase')),
            ],
            bases=('devices.eventbase',),
        ),
        migrations.CreateModel(
            name='RepairEvent',
            fields=[
                ('eventbase_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='devices.EventBase')),
                ('cost', models.FloatField()),
                ('receipt', models.FileField(blank=True, null=True, upload_to=b'')),
                ('vendor_name', models.CharField(max_length=128)),
                ('vendor_address', models.TextField(blank=True, null=True)),
            ],
            bases=('devices.eventbase',),
        ),
        migrations.CreateModel(
            name='TransferEvent',
            fields=[
                ('eventbase_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='devices.EventBase')),
                ('transfered_from', models.ForeignKey(blank=True, help_text='\n        Leave blank if this came from the spare inventory.\n        ', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='transfered_from', to='organizations.Person')),
                ('transfered_to', models.ForeignKey(blank=True, help_text='\n        Leave blank if leaving as a spare.\n        ', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='transfered_to', to='organizations.Person')),
            ],
            bases=('devices.eventbase',),
        ),
        migrations.AddField(
            model_name='eventbase',
            name='device',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='devices.Device'),
        ),
    ]
